diff --git a/src/corelib/io/qstandardpaths_mac.mm b/src/corelib/io/qstandardpaths_mac.mm
index e25339a..3bb7a78 100644
--- a/src/corelib/io/qstandardpaths_mac.mm
+++ b/src/corelib/io/qstandardpaths_mac.mm
@@ -196,42 +196,31 @@
              it != masks.end(); ++it) {
             const QString path = baseWritableLocation(type, *it, true);
             if (!path.isEmpty() && !dirs.contains(path))
                 dirs.append(path);
         }
     }
 
     if (type == AppDataLocation || type == AppLocalDataLocation) {
         CFBundleRef mainBundle = CFBundleGetMainBundle();
         if (mainBundle) {
-            CFURLRef bundleUrl = CFBundleCopyBundleURL(mainBundle);
-            CFStringRef cfBundlePath = CFURLCopyFileSystemPath(bundleUrl, kCFURLPOSIXPathStyle);
-            QString bundlePath = QString::fromCFString(cfBundlePath);
-            CFRelease(cfBundlePath);
-            CFRelease(bundleUrl);
-
-            CFURLRef resourcesUrl = CFBundleCopyResourcesDirectoryURL(mainBundle);
-            CFStringRef cfResourcesPath = CFURLCopyFileSystemPath(resourcesUrl,
-                kCFURLPOSIXPathStyle);
-            QString resourcesPath = QString::fromCFString(cfResourcesPath);
-            CFRelease(cfResourcesPath);
-            CFRelease(resourcesUrl);
-
-            // Handle bundled vs unbundled executables. CFBundleGetMainBundle() returns
-            // a valid bundle in both cases. CFBundleCopyResourcesDirectoryURL() returns
-            // an absolute path for unbundled executables.
-            if (resourcesPath.startsWith(QLatin1Char('/')))
-                dirs.append(resourcesPath);
-            else
-                dirs.append(bundlePath + resourcesPath);
-        }
-    }
+            if (QCFType<CFURLRef> resourcesURL = CFBundleCopyResourcesDirectoryURL(mainBundle)) {
+                if (QCFType<CFURLRef> absoluteResouresURL = CFURLCopyAbsoluteURL(resourcesURL)) {
+                    if (QCFType<CFStringRef> path = CFURLCopyFileSystemPath(absoluteResouresURL,
+                                                                            kCFURLPOSIXPathStyle)) {
+                        dirs.append(QString::fromCFString(path));
+                    }
+                }
+            }
+        }
+    }
+
     const QString localDir = writableLocation(type);
     if (!localDir.isEmpty())
         dirs.prepend(localDir);
     return dirs;
 }
 
 #ifndef QT_BOOTSTRAPPED
 QString QStandardPaths::displayName(StandardLocation type)
 {
     // Use "Home" instead of the user's Unix username

